# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import general_pb2 as general__pb2


class GeneralServiceStub(object):
    """双向流服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.General = channel.stream_stream(
                '/ev.algorithm.general.GeneralService/General',
                request_serializer=general__pb2.GeneralReq.SerializeToString,
                response_deserializer=general__pb2.GeneralResponse.FromString,
                )


class GeneralServiceServicer(object):
    """双向流服务
    """

    def General(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GeneralServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'General': grpc.stream_stream_rpc_method_handler(
                    servicer.General,
                    request_deserializer=general__pb2.GeneralReq.FromString,
                    response_serializer=general__pb2.GeneralResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ev.algorithm.general.GeneralService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GeneralService(object):
    """双向流服务
    """

    @staticmethod
    def General(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/ev.algorithm.general.GeneralService/General',
            general__pb2.GeneralReq.SerializeToString,
            general__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
